<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>TravelNest - Busca Hoteles, Vuelos y Paquetes</title>
<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: #f0f8ff;
    margin: 0;
    padding: 0;
  }
  header {
    background-color: #0077b6;
    color: white;
    padding: 15px 20px;
    display: flex;
    align-items: center;
  }
  .logo {
    display: flex;
    align-items: center;
    font-weight: bold;
    font-size: 24px;
    letter-spacing: 2px;
  }
  .logo svg {
    margin-right: 10px;
  }
  main {
    max-width: 720px;
    margin: 40px auto 80px;
    background: white;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 15px rgba(0,0,0,0.1);
  }
  h1 {
    text-align: center;
    color: #023e8a;
  }
  .category-tabs {
    display: flex;
    justify-content: center;
    margin-bottom: 25px;
  }
  .tab {
    cursor: pointer;
    padding: 10px 25px;
    margin: 0 8px;
    border-radius: 8px 8px 0 0;
    background-color: #90e0ef;
    color: #023e8a;
    font-weight: 600;
    transition: background-color 0.3s ease;
    user-select: none;
  }
  .tab.active {
    background-color: #0096c7;
    color: white;
  }
  form {
    margin-top: 10px;
  }
  label {
    display: block;
    margin-top: 15px;
    font-weight: 600;
    color: #023e8a;
  }
  input, select {
    width: 100%;
    padding: 8px 12px;
    margin-top: 5px;
    border: 1.5px solid #90e0ef;
    border-radius: 5px;
    font-size: 16px;
    box-sizing: border-box;
  }
  button {
    margin-top: 25px;
    width: 100%;
    background-color: #0096c7;
    color: white;
    border: none;
    padding: 12px;
    font-size: 18px;
    cursor: pointer;
    border-radius: 7px;
    transition: background-color 0.3s ease;
  }
  button:hover {
    background-color: #0077b6;
  }
  .results {
    margin-top: 30px;
    padding: 15px;
    background-color: #caf0f8;
    border-radius: 8px;
    color: #023e8a;
  }
  .location {
    margin-top: 10px;
    font-size: 14px;
  }
  .location a {
    color: #0077b6;
    text-decoration: none;
  }
  .location a:hover {
    text-decoration: underline;
  }
  .stars {
    display: inline-block;
    margin-left: 10px;
  }
  .star {
    font-size: 22px;
    cursor: pointer;
    color: #ccc;
    user-select: none;
  }
  .star.selected,
  .star.hover {
    color: #ffb400;
  }
  .favorite-list {
    margin-top: 20px;
    background: #90e0ef;
    border-radius: 8px;
    padding: 15px;
  }
  .favorite-list h3 {
    margin-top: 0;
    color: #023e8a;
  }
  .favorite-item {
    background: #caf0f8;
    margin-bottom: 8px;
    padding: 8px 12px;
    border-radius: 6px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .favorite-item button {
    background: #e63946;
    border: none;
    color: white;
    border-radius: 4px;
    padding: 4px 8px;
    cursor: pointer;
    font-weight: 600;
  }
  .favorite-item button:hover {
    background: #d62828;
  }
</style>
</head>
<body>
<header>
  <div class="logo" aria-label="Logo TravelNest">
    <svg width="36" height="36" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
      <circle cx="32" cy="32" r="30" stroke="#00b4d8" stroke-width="4"/>
      <path d="M20 44c6-10 24-12 24-12" stroke="#0077b6" stroke-width="4" stroke-linecap="round"/>
      <path d="M24 40c4-6 16-7 16-7" stroke="#0077b6" stroke-width="4" stroke-linecap="round"/>
      <circle cx="32" cy="32" r="6" fill="#0096c7"/>
    </svg>
    TravelNest
  </div>
</header>
<main>
  <h1>Busca Hoteles, Vuelos y Paquetes</h1>

  <div class="category-tabs" role="tablist">
    <div class="tab active" role="tab" tabindex="0" aria-selected="true" aria-controls="hotelForm" id="tab-hotel">Hoteles</div>
    <div class="tab" role="tab" tabindex="-1" aria-selected="false" aria-controls="flightForm" id="tab-flight">Vuelos</div>
    <div class="tab" role="tab" tabindex="-1" aria-selected="false" aria-controls="packageForm" id="tab-package">Paquetes</div>
  </div>

  <form id="hotelForm" role="tabpanel" aria-labelledby="tab-hotel">
    <label for="hotelDestination">Destino (Hotel)</label>
    <input type="text" id="hotelDestination" name="hotelDestination" placeholder="Ciudad o aeropuerto" value="Bogotá, Colombia" required />

    <label for="hotelCheckin">Fecha de Entrada</label>
    <input type="date" id="hotelCheckin" name="hotelCheckin" required />

    <label for="hotelCheckout">Fecha de Salida</label>
    <input type="date" id="hotelCheckout" name="hotelCheckout" required />

    <label for="hotelRooms">Número de Habitaciones</label>
    <select id="hotelRooms" name="hotelRooms" required>
      <option value="1">1 habitación</option>
      <option value="2">2 habitaciones</option>
      <option value="3">3 habitaciones</option>
      <option value="4">4 habitaciones</option>
      <option value="5">5 habitaciones</option>
    </select>

    <button type="submit">Buscar Hoteles</button>
  </form>

  <form id="flightForm" role="tabpanel" aria-labelledby="tab-flight" style="display:none;">
    <label for="flightFrom">Origen</label>
    <input type="text" id="flightFrom" name="flightFrom" placeholder="Ciudad o aeropuerto" value="Bogotá, Colombia" required />

    <label for="flightTo">Destino (Vuelo)</label>
    <input type="text" id="flightTo" name="flightTo" placeholder="Ciudad o aeropuerto" required />

    <label for="flightDate">Fecha de Vuelo</label>
    <input type="date" id="flightDate" name="flightDate" required />

    <label for="flightPassengers">Número de Pasajeros</label>
    <select id="flightPassengers" name="flightPassengers" required>
      <option value="1">1 pasajero</option>
      <option value="2">2 pasajeros</option>
      <option value="3">3 pasajeros</option>
      <option value="4">4 pasajeros</option>
      <option value="5">5 pasajeros</option>
    </select>

    <button type="submit">Buscar Vuelos</button>
  </form>

  <form id="packageForm" role="tabpanel" aria-labelledby="tab-package" style="display:none;">
    <label for="packageFrom">Origen</label>
    <input type="text" id="packageFrom" name="packageFrom" placeholder="Ciudad o aeropuerto" value="Bogotá, Colombia" required />

    <label for="packageTo">Destino</label>
    <input type="text" id="packageTo" name="packageTo" placeholder="Ciudad o aeropuerto" required />

    <label for="packageCheckin">Fecha de Entrada (Hotel)</label>
    <input type="date" id="packageCheckin" name="packageCheckin" required />

    <label for="packageCheckout">Fecha de Salida (Hotel)</label>
    <input type="date" id="packageCheckout" name="packageCheckout" required />

    <label for="packageFlightDate">Fecha de Vuelo</label>
    <input type="date" id="packageFlightDate" name="packageFlightDate" required />

    <label for="packagePassengers">Número de Pasajeros</label>
    <select id="packagePassengers" name="packagePassengers" required>
      <option value="1">1 pasajero</option>
      <option value="2">2 pasajeros</option>
      <option value="3">3 pasajeros</option>
      <option value="4">4 pasajeros</option>
      <option value="5">5 pasajeros</option>
    </select>

    <button type="submit">Buscar Paquetes</button>
  </form>

  <div class="results" id="results" aria-live="polite" style="display:none;"></div>

  <section class="favorite-list" aria-label="Lista de Favoritos" style="display:none;">
    <h3>Favoritos</h3>
    <div id="favoritesContainer"></div>
  </section>
</main>

<script>
  // Manejo de tabs
  const tabs = document.querySelectorAll('.tab');
  const forms = {
    hotel: document.getElementById('hotelForm'),
    flight: document.getElementById('flightForm'),
    package: document.getElementById('packageForm')
  };
  const results = document.getElementById('results');
  const favoriteSection = document.querySelector('.favorite-list');
  const favoritesContainer = document.getElementById('favoritesContainer');

  let favorites = [];

  function renderFavorites() {
    if (favorites.length === 0) {
      favoritesContainer.innerHTML = '<p>No hay favoritos aún.</p>';
      favoriteSection.style.display = 'none';
      return;
    }
    favoriteSection.style.display = 'block';
    favoritesContainer.innerHTML = '';
    favorites.forEach((fav, idx) => {
      const div = document.createElement('div');
      div.className = 'favorite-item';
      div.innerHTML = `
        <span>${fav.title}</span>
        <button aria-label="Eliminar favorito" data-index="${idx}">Eliminar</button>
      `;
      favoritesContainer.appendChild(div);
    });

    favoritesContainer.querySelectorAll('button').forEach(btn => {
      btn.addEventListener('click', e => {
        const idx = e.target.getAttribute('data-index');
        favorites.splice(idx, 1);
        renderFavorites();
      });
    });
  }

  function createStars(rating = 0) {
    const starsContainer = document.createElement('span');
    starsContainer.className = 'stars';
    for (let i = 1; i <= 5; i++) {
      const star = document.createElement('span');
      star.className = 'star';
      star.innerHTML = '★';
      if (i <= rating) star.classList.add('selected');
      star.dataset.value = i;
      starsContainer.appendChild(star);
    }
    return starsContainer;
  }

  function addStarListeners(starsContainer, updateCallback) {
    const stars = starsContainer.querySelectorAll('.star');
    stars.forEach(star => {
      star.addEventListener('mouseover', () => {
        stars.forEach(s => s.classList.remove('hover'));
        let val = star.dataset.value;
        for(let i = 0; i < val; i++) {
          stars[i].classList.add('hover');
        }
      });
      star.addEventListener('mouseout', () => {
        stars.forEach(s => s.classList.remove('hover'));
      });
      star.addEventListener('click', () => {
        let val = star.dataset.value;
        stars.forEach(s => s.classList.remove('selected'));
        for(let i = 0; i < val; i++) {
          stars[i].classList.add('selected');
        }
        updateCallback(val);
      });
    });
  }

  tabs.forEach(tab => {
    tab.addEventListener('click', () => {
      // Cambiar estilos y atributos aria
      tabs.forEach(t => {
        t.classList.remove('active');
        t.setAttribute('aria-selected', 'false');
        t.tabIndex = -1;
      });
      tab.classList.add('active');
      tab.setAttribute('aria-selected', 'true');
      tab.tabIndex = 0;
      tab.focus();

      // Mostrar solo el form correspondiente
      const target = tab.id.split('-')[1];
      for (const key in forms) {
        forms[key].style.display = (key === target) ? 'block' : 'none';
      }
      // Limpiar resultados
      results.style.display = 'none';
      results.innerHTML = '';
    });
  });

  // Validar rango fechas
  function validateDateRange(startDateStr, endDateStr, startLabel = 'Fecha de inicio', endLabel = 'Fecha de fin') {
    const startDate = new Date(startDateStr);
    const endDate = new Date(endDateStr);
    if (startDate >= endDate) {
      alert(`${endLabel} debe ser posterior a ${startLabel}.`);
      return false;
    }
    return true;
  }

  // Construir link de maps para Colombia + ciudad
  function mapsLink(city = '') {
    const base = 'https://www.google.com/maps/search/';
    const query = encodeURIComponent(`${city}, Colombia`);
    return base + query;
  }

  function createResultItem(title, price, location) {
    const div = document.createElement('div');
    div.style.marginBottom = '8px';

    // Título con link a Google Maps
    const titleLink = document.createElement('a');
    titleLink.href = mapsLink(location);
    titleLink.target = '_blank';
    titleLink.rel = 'noopener noreferrer';
    titleLink.textContent = title + ` (${location})`;
    titleLink.style.fontWeight = '700';
    titleLink.style.color = '#0077b6';

    // Botón para favorito
    const favBtn = document.createElement('button');
    favBtn.textContent = '★ Favorito';
    favBtn.style.marginLeft = '10px';
    favBtn.style.backgroundColor = '#0096c7';
    favBtn.style.color = 'white';
    favBtn.style.border = 'none';
    favBtn.style.padding = '4px 10px';
    favBtn.style.borderRadius = '5px';
    favBtn.style.cursor = 'pointer';

    favBtn.addEventListener('click', () => {
      if (!favorites.find(f => f.title === title && f.location === location)) {
        favorites.push({title, location});
        renderFavorites();
      }
    });

    // Contenedor estrellas
    const starCont = createStars(0);
    addStarListeners(starCont, val => {
      alert(`Has calificado "${title}" con ${val} estrella(s)`);
    });

    div.appendChild(titleLink);
    div.appendChild(favBtn);
    div.appendChild(starCont);
    return div;
  }

  // Handler hoteles
  forms.hotel.addEventListener('submit', e => {
    e.preventDefault();
    const destination = e.target.hotelDestination.value
